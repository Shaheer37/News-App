apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'androidx.navigation.safeargs.kotlin'
apply from: 'configs.gradle'

android {
    compileSdkVersion 29

    defaultConfig {
        applicationId "news.app.com"
        minSdkVersion 21
        targetSdkVersion 29
        versionCode 1
        versionName "1.0.0"
        testInstrumentationRunner "news.app.com.AndroidTestRunner"
        testInstrumentationRunnerArguments clearPackageData: 'true'
    }

    def props = project.ext
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            buildConfigField 'String', props.NEWS_API_KEY_NAME, props.NEWS_API_KEY
        }
        debug{
            buildConfigField 'String', props.NEWS_API_KEY_NAME, props.NEWS_API_KEY
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = "1.8"
        freeCompilerArgs += ["-Xopt-in=kotlin.RequiresOptIn"]
    }
    androidExtensions {
        experimental = true
    }

    // Always show the result of every unit test when running via command line, even if it passes.
    testOptions{
        execution 'ANDROIDX_TEST_ORCHESTRATOR'
        unitTests {
            includeAndroidResources = true
        }
    }

    dexOptions {
        javaMaxHeapSize "4g"
    }
}

dependencies {
    def daggerVersion = "2.27"
    def timberVersion = "4.7.1"
    def okHttpVersion = "4.8.1"
    def retrofitVersion = "2.9.0"
    def frescoVersion = "2.1.0"
    def gsonVersion = "2.8.6"

    def fragmentVersion = "1.2.3"

    def lifecycleVersion = "2.2.0"
    def roomVersion = "2.3.0-alpha01"
    def pagingVersion = "3.0.0-alpha01"
    def easyPermissionVersion = "3.0.0"

    def mockkVersion = "1.9.3"
    def mockitoVersion = "3.3.3"
    def mockwebserverVersion = "4.7.2"

    def junitVersion = "4.12"
    def coroutineTestVerion = "1.2.1"
    def androidXTestCoreVersion = "1.2.0"
    def androidXTestExtKotlinRunnerVersion = "1.1.1"
    def archTestingVersion = "2.0.0"
    def robolectricVersion = "4.3.1"

    def dexMakerVersion = "2.12.1"
    def espressoCoreVersion = "3.2.0"

    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlinVersion"

    implementation 'androidx.appcompat:appcompat:1.2.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.0.4'
    implementation 'com.google.android.material:material:1.3.0'
    implementation "androidx.swiperefreshlayout:swiperefreshlayout:1.1.0"

    implementation "androidx.navigation:navigation-fragment-ktx:$navigationVersion"
    implementation "androidx.navigation:navigation-ui-ktx:$navigationVersion"

    implementation "androidx.lifecycle:lifecycle-extensions:$lifecycleVersion"
    implementation "androidx.lifecycle:lifecycle-runtime:$lifecycleVersion"
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycleVersion"
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:$lifecycleVersion"

    implementation "androidx.paging:paging-runtime:$pagingVersion"

    implementation "androidx.room:room-runtime:$roomVersion"
    kapt "androidx.room:room-compiler:$roomVersion"
    implementation "androidx.room:room-ktx:$roomVersion"

    implementation "com.google.dagger:dagger:$daggerVersion"
    implementation "com.google.dagger:dagger-android:$daggerVersion"
    implementation "com.google.dagger:dagger-android-support:$daggerVersion"
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    implementation 'androidx.recyclerview:recyclerview:1.1.0'
    kapt "com.google.dagger:dagger-android-processor:$daggerVersion"
    kapt "com.google.dagger:dagger-compiler:$daggerVersion"

    //timber
    implementation "com.jakewharton.timber:timber:$timberVersion"

    //okhttp
    implementation "com.squareup.okhttp3:okhttp:$okHttpVersion"
    implementation "com.squareup.okhttp3:logging-interceptor:$okHttpVersion"

    //gson
    implementation "com.google.code.gson:gson:$gsonVersion"

    //retrofit
    implementation "com.squareup.retrofit2:retrofit:$retrofitVersion"
    implementation "com.squareup.retrofit2:converter-gson:$retrofitVersion"

    //fresco
    implementation "com.facebook.fresco:fresco:$frescoVersion"

    implementation "pub.devrel:easypermissions:$easyPermissionVersion"

    implementation "androidx.test.espresso:espresso-idling-resource:$espressoCoreVersion"

    testImplementation "junit:junit:$junitVersion"
    testImplementation "androidx.test:core:$androidXTestCoreVersion"
    testImplementation "androidx.test:runner:$androidXTestCoreVersion"
    testImplementation "androidx.test.ext:junit:$androidXTestExtKotlinRunnerVersion"
    testImplementation "androidx.arch.core:core-testing:$archTestingVersion"

    testImplementation "androidx.room:room-testing:$roomVersion"
    testImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:$coroutineTestVerion"

    testImplementation "org.robolectric:robolectric:$robolectricVersion"
    testImplementation "org.mockito:mockito-core:$mockitoVersion"


    debugImplementation "androidx.fragment:fragment-testing:$fragmentVersion"
    debugImplementation 'com.squareup.leakcanary:leakcanary-android:2.2'

    kaptAndroidTest "com.google.dagger:dagger-compiler:$daggerVersion"

    androidTestImplementation "androidx.test:core:$androidXTestCoreVersion"
    androidTestImplementation "androidx.test.ext:junit:$androidXTestExtKotlinRunnerVersion"
    androidTestImplementation "androidx.test.ext:junit-ktx:$androidXTestExtKotlinRunnerVersion"

    androidTestImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:$coroutineTestVerion"

    androidTestImplementation "junit:junit:$junitVersion"

    androidTestImplementation "com.squareup.okhttp3:mockwebserver:$mockwebserverVersion"

    androidTestImplementation "io.mockk:mockk-android:$mockkVersion"
    androidTestImplementation ("org.mockito:mockito-core:$mockitoVersion"){
        exclude group: 'org.objenesis'
    }
    androidTestImplementation "com.linkedin.dexmaker:dexmaker-mockito:$dexMakerVersion"

    androidTestImplementation "androidx.test.espresso:espresso-core:$espressoCoreVersion"
    androidTestImplementation "androidx.test.espresso:espresso-contrib:$espressoCoreVersion"
    androidTestImplementation "androidx.test.espresso:espresso-intents:$espressoCoreVersion"
    androidTestImplementation "androidx.test.ext:junit:$androidXTestExtKotlinRunnerVersion"

    androidTestImplementation "androidx.test:runner:$androidXTestCoreVersion"
    androidTestUtil "androidx.test:orchestrator:$androidXTestCoreVersion"
}
